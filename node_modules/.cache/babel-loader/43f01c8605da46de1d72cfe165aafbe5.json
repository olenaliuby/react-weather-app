{"ast":null,"code":"import _regeneratorRuntime from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/src/App.js\";\nimport React from 'react';\nimport SearchPanel from './components/SearchPanel';\nimport WeatherContainer from './components/WeatherContainer';\nvar API_KEY = '17c95714008c4648066caaeccfd855e7';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: undefined,\n      city: undefined,\n      temperature: undefined,\n      wind: undefined,\n      pressure: undefined,\n      humidity: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      description: undefined,\n      error: undefined,\n      ready: false\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, apiCall, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n\n                if (!city) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 5;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n              case 5:\n                apiCall = _context.sent;\n                _context.next = 8;\n                return apiCall.json();\n\n              case 8:\n                data = _context.sent;\n                console.log(data);\n                if (data.cod != '404') _this.setState({\n                  date: data.dt,\n                  city: data.name,\n                  temperature: data.main.temp,\n                  wind: data.wind.speed,\n                  pressure: data.main.pressure,\n                  humidity: data.main.humidity,\n                  sunrise: data.sys.sunrise,\n                  sunset: data.sys.sunset,\n                  description: data.weather[0].description,\n                  error: \"\",\n                  ready: true\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"weather-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(SearchPanel, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), this.state.ready && React.createElement(WeatherContainer, {\n        weatherData: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/olenka/Desktop/webacademy/project_myself/App/my-app/src/App.js"],"names":["React","SearchPanel","WeatherContainer","API_KEY","App","state","date","undefined","city","temperature","wind","pressure","humidity","sunrise","sunset","description","error","ready","getWeather","e","preventDefault","target","elements","value","fetch","apiCall","json","data","console","log","cod","setState","dt","name","main","temp","speed","sys","weather","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,IAAMC,OAAO,GAAG,kCAAhB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,WAAW,EAAEF,SAHP;AAING,MAAAA,IAAI,EAAEH,SAJA;AAKNI,MAAAA,QAAQ,EAAEJ,SALJ;AAMNK,MAAAA,QAAQ,EAAEL,SANJ;AAONM,MAAAA,OAAO,EAAEN,SAPH;AAQNO,MAAAA,MAAM,EAAEP,SARF;AASNQ,MAAAA,WAAW,EAAER,SATP;AAUNS,MAAAA,KAAK,EAAET,SAVD;AAWNU,MAAAA,KAAK,EAAE;AAXD,K;;UAcRC,U;;;;;+BAAa,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,CAAC,CAACC,cAAF;AACMZ,gBAAAA,IAFK,GAEEW,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBd,IAAlB,CAAuBe,KAFzB;;AAAA,qBAGPf,IAHO;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIagB,KAAK,4DAAqDhB,IAArD,oBAAmEL,OAAnE,mBAJlB;;AAAA;AAIHsB,gBAAAA,OAJG;AAAA;AAAA,uBAKUA,OAAO,CAACC,IAAR,EALV;;AAAA;AAKHC,gBAAAA,IALG;AAMTC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,oBAAIA,IAAI,CAACG,GAAL,IAAY,KAAhB,EACE,MAAKC,QAAL,CAAc;AACZzB,kBAAAA,IAAI,EAAEqB,IAAI,CAACK,EADC;AAEZxB,kBAAAA,IAAI,EAAEmB,IAAI,CAACM,IAFC;AAGZxB,kBAAAA,WAAW,EAAEkB,IAAI,CAACO,IAAL,CAAUC,IAHX;AAIZzB,kBAAAA,IAAI,EAAEiB,IAAI,CAACjB,IAAL,CAAU0B,KAJJ;AAKZzB,kBAAAA,QAAQ,EAAEgB,IAAI,CAACO,IAAL,CAAUvB,QALR;AAMZC,kBAAAA,QAAQ,EAAEe,IAAI,CAACO,IAAL,CAAUtB,QANR;AAOZC,kBAAAA,OAAO,EAAEc,IAAI,CAACU,GAAL,CAASxB,OAPN;AAQZC,kBAAAA,MAAM,EAAEa,IAAI,CAACU,GAAL,CAASvB,MARL;AASZC,kBAAAA,WAAW,EAAEY,IAAI,CAACW,OAAL,CAAa,CAAb,EAAgBvB,WATjB;AAUZC,kBAAAA,KAAK,EAAE,EAVK;AAWZC,kBAAAA,KAAK,EAAE;AAXK,iBAAd;;AARO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAwBJ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAKC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKb,KAAL,CAAWY,KAAX,IAAoB,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAE,KAAKZ,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFvB,CADF;AAMD;;;;EA9CeL,KAAK,CAACuC,S;;AAiDxB,eAAenC,GAAf","sourcesContent":["import React from 'react';\n\nimport SearchPanel from './components/SearchPanel';\nimport WeatherContainer from './components/WeatherContainer';\n\nconst API_KEY = '17c95714008c4648066caaeccfd855e7';\n\nclass App extends React.Component {\n  state = {\n    date: undefined,\n    city: undefined,\n    temperature: undefined,\n    wind: undefined,\n    pressure: undefined,\n    humidity: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    description: undefined,\n    error: undefined,\n    ready: false\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    if (city) {\n      const apiCall = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await apiCall.json();\n      console.log(data);\n      if (data.cod != '404')\n        this.setState({\n          date: data.dt,\n          city: data.name,\n          temperature: data.main.temp,\n          wind: data.wind.speed,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          description: data.weather[0].description,\n          error: \"\",\n          ready: true\n        }\n        )\n    }\n  }\n  render() {\n    return (\n      <div className=\"weather-container\">\n        <SearchPanel getWeather={this.getWeather} />\n        {this.state.ready && <WeatherContainer weatherData={this.state} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}