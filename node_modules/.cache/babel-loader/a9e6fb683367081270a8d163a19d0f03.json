{"ast":null,"code":"import _classCallCheck from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/olenka/Desktop/webacademy/project_myself/App/my-app/src/components/WeatherContainer.js\";\nimport React from 'react';\n\nvar WeatherContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WeatherContainer, _React$Component);\n\n  function WeatherContainer() {\n    _classCallCheck(this, WeatherContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherContainer).apply(this, arguments));\n  }\n\n  _createClass(WeatherContainer, [{\n    key: \"render\",\n    value: function render() {\n      var imageMain = {\n        Rain: require('../static/rain-d.png'),\n        Thunderstorm: require('../static/thunderstorm.png'),\n        Drizzle: require('../static/drizzle.png'),\n        Snow: require('../static/snow.png'),\n        Clear: require('../static/clear-d.png'),\n        Clouds: require('../static/clouds-d.png'),\n        default: require('../static/mist.png')\n      };\n\n      var getFullTime = function getFullTime(time) {\n        var myDate = new Date(time * 1000);\n        return myDate.toDateString();\n      };\n\n      var getTime = function getTime(time) {\n        var myTime = new Date(time * 1000);\n        return myTime.toTimeString().split(' ')[0];\n      };\n\n      if (!imageMain[this.props.weatherData.main]) {\n        this.props.weatherData.main = 'default';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"weather-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"date-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, getFullTime(this.props.weatherData.date))), React.createElement(\"div\", {\n        className: \"weather-conditions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.weatherData.error && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.weatherData.error), React.createElement(\"div\", {\n        className: \"weather-city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.weatherData.city), React.createElement(\"div\", {\n        className: \"weather-temperature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, Math.round(this.props.weatherData.temperature), \"\\xB0\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Wind: \", this.props.weatherData.wind, \"km/h\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Pressure: \", this.props.weatherData.pressure, \"MB\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Humodity: \", this.props.weatherData.humidity, \"%\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"weather-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: imageMain[this.props.weatherData.main],\n        alt: this.props.weatherData.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Sunrise: \", getTime(this.props.weatherData.sunrise)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Sunset: \", getTime(this.props.weatherData.sunset)))));\n    }\n  }]);\n\n  return WeatherContainer;\n}(React.Component);\n\nexport default WeatherContainer;","map":{"version":3,"sources":["/Users/olenka/Desktop/webacademy/project_myself/App/my-app/src/components/WeatherContainer.js"],"names":["React","WeatherContainer","imageMain","Rain","require","Thunderstorm","Drizzle","Snow","Clear","Clouds","default","getFullTime","time","myDate","Date","toDateString","getTime","myTime","toTimeString","split","props","weatherData","main","date","error","city","Math","round","temperature","wind","pressure","humidity","sunrise","sunset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass WeatherContainer extends React.Component {\n\n    render() {\n        const imageMain = {\n            Rain: require('../static/rain-d.png'),\n            Thunderstorm: require('../static/thunderstorm.png'),\n            Drizzle: require('../static/drizzle.png'),\n            Snow: require('../static/snow.png'),\n            Clear: require('../static/clear-d.png'),\n            Clouds: require('../static/clouds-d.png'),\n            default: require('../static/mist.png')\n        }\n        const getFullTime = (time) => {\n            let myDate = new Date(time * 1000);\n            return myDate.toDateString()\n        }\n\n        const getTime = (time) => {\n            let myTime = new Date(time * 1000);\n            return myTime.toTimeString().split(' ')[0];\n        }\n\n        if (!imageMain[this.props.weatherData.main]) {\n            this.props.weatherData.main = 'default';\n        }\n\n        return (\n            <div className='weather-container' >\n                <div className='date-container'>\n                    <div>{getFullTime(this.props.weatherData.date)}</div>\n                </div>\n                <div className='weather-conditions'>\n                    <div>\n                        {this.props.weatherData.error && <div>{this.props.weatherData.error}</div>}\n                        <div className='weather-city'>{this.props.weatherData.city}</div>\n                        <div className='weather-temperature'>{Math.round(this.props.weatherData.temperature)}Â°</div>\n                        <div>Wind: {this.props.weatherData.wind}km/h</div>\n                        <div>Pressure: {this.props.weatherData.pressure}MB</div>\n                        <div>Humodity: {this.props.weatherData.humidity}%</div>\n                    </div>\n                    <div>\n                        <div className='weather-img'>\n                            <img src={imageMain[this.props.weatherData.main]} alt={this.props.weatherData.main} />\n                        </div>\n                        <div>Sunrise: {getTime(this.props.weatherData.sunrise)}</div>\n                        <div>Sunset: {getTime(this.props.weatherData.sunset)}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WeatherContainer;"]},"metadata":{},"sourceType":"module"}